---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";

const postEntries = await getCollection("posts");

const renderedEntries = await Promise.all(
    postEntries
        .filter((entry: any) =>
            import.meta.env.PROD ? entry.data.draft !== true : true,
        )
        .map(async (entry: any) => {
            const { remarkPluginFrontmatter } = await entry.render();
            return {
                ...entry,
                minutesRead: remarkPluginFrontmatter.minutesRead,
            };
        }),
);

renderedEntries.sort(
    (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
);

const pageTitle = "Steele - Posts";
const pageDescription = "A collection of Steele's posts.";

const formatDate = (dateString: Date) => {
    const date = new Date(dateString);
    return date.toLocaleDateString("en-US", {
        month: "numeric",
        day: "numeric",
        year: "numeric",
    });
};
---

<BaseLayout pageTitle={pageTitle} pageDescription={pageDescription}>
    <section class="slide-enter-content">
        <h1>Posts</h1>
        <p>I write stuff. Sometimes I share.</p>
        <ul id="posts-list">
            {
                renderedEntries.map((entry) => (
                    <li>
                        <a href={`/posts/${entry.slug}`}>
                            <span class="title">{entry.data.title}</span>
                            <span class="meta">
                                {formatDate(entry.data.pubDate)}
                            </span>
                        </a>
                    </li>
                ))
            }
        </ul>
    </section>
</BaseLayout>

<style>
    h1 {
        margin-bottom: 1rem;
    }

    p {
        margin-bottom: 1.5rem;
    }

    ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    a {
        display: flex;
        background-color: var(--primary-9-5);
        border: 1px solid var(--primary-9);
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        margin-bottom: 0.75rem;
        align-items: center;
        text-decoration: none;
        justify-content: space-between;
        transition: all 0.3s ease;
        color: var(--primary-2);
    }

    .title {
        display: flex;
        max-width: 60%;
        align-items: center;
        gap: 0.5rem;
    }

    .meta {
        color: var(--primary-5);
        font-size: var(--font-size-0-75);
        transition: color 0.3s ease;
    }

    ul a:hover {
        color: black;
        border-color: var(--primary-2);
    }

    ul:hover a {
        color: gray;
    }

    ul a:hover {
        color: black;
    }

    ul a:hover .meta {
        color: black;
    }

    @media (max-width: 768px) {
        h1 {
            font-size: var(--font-size-5);
        }
    }

    @media (max-width: 425px) {
        .meta:first-child {
            display: none;
        }

        .title {
            font-size: var(--font-size-0-75);
        }
    }
</style>
